import time

import DefOfSQLite as DefSQL
from LibraryReaders import LibraryReaders as LibReader


def function_input():
    print("–í–≤–µ–¥–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π\n"
          "1 - –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å\n"
          "2 - –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å\n"
          "3 - –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å\n"
          "4 - –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–∫–∏\n"
          "5 - –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ë–î –≤ JSON\n"
          "6 - –ü–æ–º–æ—â—å\n"
          "7 - –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
    try:
        function = int(input())
    except (TypeError, ValueError):
        print("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–∏")
        return function_input()
    else:
        if function < 1 or function > 7:
            print("–¢–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return function_input()
        else:
            return function


def table_input():
    print("–í–≤–µ–¥–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ä–∞–±–æ—Ç—ã\n"
          "1 - –ß–∏—Ç–∞—Ç–µ–ª–∏\n"
          "2 - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n"
          "3 - –ê–¥—Ä–µ—Å–∞")
    try:
        table_name = int(input())
    except (TypeError, ValueError):
        print("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã")
        return table_input()
    else:
        if table_name < 1 or table_name > 4:
            print("–¢–∞–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return table_input()
        else:
            return table_name


def insert_data(iterat, table_name, _readers):
    if table_name == 1:
        return [_readers[iterat].lib_card_num]
    if table_name == 2:
        return [_readers[iterat].lib_card_num, _readers[iterat].surname_np, _readers[iterat].gender,
                _readers[iterat].birthday_date, _readers[iterat].age, _readers[iterat].education]
    if table_name == 3:
        return [_readers[iterat].lib_card_num, _readers[iterat].address]
    if table_name == "all":
        return [_readers[iterat].lib_card_num, _readers[iterat].surname_np,
                _readers[iterat].gender, _readers[iterat].birthday_date,
                _readers[iterat].age, _readers[iterat].education,
                _readers[iterat].address]


_readers = [LibReader()]
print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ - —ç—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–º–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ üìö")
sql_con = DefSQL.sqlite_connect()
DefSQL.sqlite_table(sql_con)

while True:
    DefSQL.sqlite_select(sql_con, 1, True)
    func = function_input()
    if 4 <= func <= 7:
        pass
    else:
        if func == 1:
            try:
                insert_all = int(input("–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é?\n1 -\t–î–∞\n2 -\t–ù–µ—Ç\n"))
                if insert_all == 1 or insert_all == 2:
                    pass
                else:
                    raise ValueError
            except (TypeError, ValueError) as err:
                print("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 2")
            else:
                table_name = table_input()
        else:
            table_name = table_input()

    if func == 1:
        while True:
            i = 0
            if insert_all == 1:
                DefSQL.sqlite_select(sql_con, 1, True)
                _readers[i].lib_card_num = ()
                is_exists = DefSQL.sqlite_is_exists(sql_con, 1, _readers[i].lib_card_num)
                if is_exists:
                    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —á–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –±–∏–ª–µ—Ç")
                elif not is_exists:
                    _readers[i].surname_np = ()
                    _readers[i].gender = ()
                    _readers[i].birthday_date = ()
                    _readers[i].age = ()
                    _readers[i].education = ()
                    _readers[i].address = ()
                    DefSQL.sqlite_insert(sql_con, "all", insert_data(i, "all", _readers))
                    DefSQL.sqlite_select(sql_con, table_name, True)
            elif insert_all == 2:
                DefSQL.sqlite_select(sql_con, table_name)
                if table_name == 1:
                    _readers[i].lib_card_num = ()
                elif table_name == 2:
                    _readers[i].lib_card_num = ()
                    is_exists = DefSQL.sqlite_is_exists(sql_con, 1, _readers[i].lib_card_num)
                    if is_exists:
                        _readers[i].surname_np = ()
                        _readers[i].gender = ()
                        _readers[i].birthday_date = ()
                        _readers[i].age = ()
                        _readers[i].education = ()
                    elif not is_exists:
                        print("–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —á–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –±–∏–ª–µ—Ç")
                    else:
                        print("–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–∞–∫–æ–≥–æ —á–∏—Ç–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞")
                elif table_name == 3:
                    _readers[i].lib_card_num = ()
                    is_exists = DefSQL.sqlite_is_exists(sql_con, 1, _readers[i].lib_card_num)
                    if is_exists:
                        _readers[i].address = ()
                    if not is_exists:
                        print("–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —á–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –±–∏–ª–µ—Ç")
                DefSQL.sqlite_insert(sql_con, table_name, insert_data(i, table_name, _readers))
                DefSQL.sqlite_select(sql_con, table_name)
            try:
                statement = int(
                    input("–í–≤–µ–¥–∏—Ç–µ:\n\t1 - –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É\n\t2 - –ß—Ç–æ–±—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö\n"))
            except (TypeError, ValueError) as err:
                print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")
            else:
                if statement == 1:
                    pass
                elif statement == 2:
                    break

    if func == 2:
        while True:
            DefSQL.sqlite_select(sql_con, table_name)
            try:
                id = int(input("–í–≤–µ–¥–∏—Ç–µ ID —á–∏—Ç–∞—Ç–µ–ª—è\t"))
            except (TypeError, ValueError) as err:
                print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")
            else:
                is_exists = DefSQL.sqlite_is_exists(sql_con, 1, id)
                if is_exists:
                    DefSQL.sqlite_delete(sql_con, 1, id)
                    print(f"–ó–∞–ø–∏—Å—å {id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
                elif not is_exists:
                    print("–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–∞–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞!")
                try:
                    statement = int(input(
                        "\t–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤–≤–µ–¥–∏—Ç–µ -\t1\n\t–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ -\t2\n"))
                except (TypeError, ValueError) as err:
                    print("–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2")
                else:
                    if statement == 1:
                        pass
                    if statement == 2:
                        break
    if func == 3:
        new_value = LibReader()
        i = 0
        while True:
            DefSQL.sqlite_select(sql_con, table_name)
            print("* –ù–æ–º–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è *")
            _readers[i].lib_card_num = ()
            if table_name == 1:
                print("* –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞ *")
                new_value.lib_card_num = ()
                new = [new_value.lib_card_num,
                       _readers[i].lib_card_num]
                DefSQL.sqlite_update(sql_con, table_name, new)
                print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")

            elif table_name == 2:
                print("–ö–∞–∫–æ–µ –ø–æ–ª–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\n"
                      "1 - –§–ò–û\n"
                      "2 - –ü–æ–ª\n"
                      "3 - –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è\n"
                      "4 - –í–æ–∑—Ä–∞—Å—Ç\n"
                      "5 - –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n"
                      "6 - –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é")
                try:
                    statement = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ -\t"))
                    if statement > 6:
                        raise ValueError
                except (TypeError, ValueError) as err:
                    print("\t–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è")
                else:
                    print("* –ù–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π *")
                    if statement == 1:
                        new_value.surname_np = ()
                        new = [new_value.surname_np, _readers[i].lib_card_num]
                        DefSQL.sqlite_update(sql_con, table_name, new, statement)
                    elif statement == 2:
                        new_value.gender = ()
                        new = [new_value.gender, _readers[i].lib_card_num]
                        DefSQL.sqlite_update(sql_con, table_name, new, statement)
                    elif statement == 3:
                        new_value.birthday_date = ()
                        new = [new_value.birthday_date, _readers[i].lib_card_num]
                        DefSQL.sqlite_update(sql_con, table_name, new, statement)
                    elif statement == 4:
                        new_value.age = ()
                        new = [new_value.age, _readers[i].lib_card_num]
                        DefSQL.sqlite_update(sql_con, table_name, new, statement)
                    elif statement == 5:
                        new_value.education = ()
                        new = [new_value.education, _readers[i].lib_card_num]
                        DefSQL.sqlite_update(sql_con, table_name, new, statement)
                    elif statement == 6:
                        new_value.surname_np = ()
                        new_value.gender = ()
                        new_value.birthday_date = ()
                        new_value.age = ()
                        new_value.education = ()
                        new = [new_value.surname_np, new_value.gender,
                               new_value.birthday_date, new_value.age,
                               new_value.education,
                               _readers[i].lib_card_num]
                        DefSQL.sqlite_update(sql_con, table_name, new, statement)

            elif table_name == 3:
                print("* –ù–æ–≤—ã–π –∞–¥—Ä–µ—Å *")
                new_value.address = ()
                new = [new_value.address,
                       _readers[i].lib_card_num]
                DefSQL.sqlite_update(sql_con, table_name, new)
                print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")

            DefSQL.sqlite_select(sql_con, table_name)

            try:
                statement = int(input(
                    "\t–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤–≤–µ–¥–∏—Ç–µ -\t1\n\t–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ -\t2\n"))
            except (TypeError, ValueError) as err:
                print("–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2")
            else:
                if statement == 1:
                    pass
                if statement == 2:
                    break

    if func == 4:
        output_value = LibReader()
        output_list = []
        while True:
            print("–ö–∞–∫–æ–π —Å–ø–∏—Å–æ–∫ –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–≤–µ—Å—Ç–∏?\n"
                  "1 - –ü–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é\n"
                  "2 - –ü–æ –ø–æ–ª—É\n"
                  "3 - –ü–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≥–æ–¥—É —Ä–æ–∂–¥–µ–Ω–∏—è —á–∏—Ç–∞—Ç–µ–ª—è\n"
                  "4 - –ü–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É –Ω–æ–º–µ—Ä–∞ —á–∏—Ç–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞\n"
                  "5 - –ü–æ –±—É–∫–≤–µ —Ñ–∞–º–∏–ª–∏–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É")
            try:
                statement = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Å–ø–∏—Å–æ–∫ -\t"))
                if statement > 5:
                    raise ValueError
            except (TypeError, ValueError) as err:
                print("\t–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –≤ –∑–Ω–∞—á–µ–Ω–∏—è—Ö –æ—Ç 1 –¥–æ 5")
            else:
                if statement == 1:
                    try:
                        start_between = int(input("–í–≤–µ–¥–∏—Ç–µ –æ—Ç –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ -\t"))
                    except (TypeError, ValueError) as err:
                        print("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —á–∏—Å–ª–æ")
                    else:
                        try:
                            end_between = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–æ –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ -\t"))
                        except (TypeError, ValueError) as err:
                            print("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —á–∏—Å–ª–æ")
                        else:
                            output_value.education = ()
                            output_list = [start_between, end_between,
                                           output_value.education]

                elif statement == 2:
                    output_value.gender = ()
                    output_list = [output_value.gender]
                elif statement == 3:
                    output_value.education = ()
                    output_list = [output_value.education]
                elif statement == 4:
                    try:
                        start_between = int(input("–í–≤–µ–¥–∏—Ç–µ –æ—Ç –∫–∞–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ -\t"))
                    except (TypeError, ValueError) as err:
                        print("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —á–∏—Å–ª–æ")
                    else:
                        try:
                            end_between = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–æ –∫–∞–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ -\t"))
                        except (TypeError, ValueError) as err:
                            print("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —á–∏—Å–ª–æ")
                        else:
                            output_list = [start_between, end_between]
                elif statement == 5:
                    letter = input("–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É —Ñ–∞–º–∏–ª–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ -\t")
                    if letter.isdigit():
                        print("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –±—É–∫–≤—É")
                    else:
                        output_list = [f"{letter.upper()}%"]
                else:
                    print("–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ —É—Å–ª–æ–≤–∏–µ")
                DefSQL.sqlite_output_group(sql_con, output_list, statement)

            try:
                statement = int(input(
                    "\t–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–æ–≤ –≤–≤–µ–¥–∏—Ç–µ -\t1\n\t–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ -\t2\n"))
            except (TypeError, ValueError) as err:
                print("–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2")
            else:
                if statement == 1:
                    pass
                if statement == 2:
                    break
    if func == 5:
        DefSQL.sqlite_export_json(sql_con)
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ JSON")
        sql_con = DefSQL.sqlite_connect()

    if func == 6:
        file = r"D:\–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞\–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–æ–≤–æ–π\Manual\–ü–æ–º–æ—â—å.txt"
        try:
            manual = open(file, "r", encoding='utf-8')
        except FileNotFoundError:
            print("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª \"–ü–æ–º–æ—â—å\"")
        else:
            for line in manual:
                print(line, end="")
        finally:
            manual.close()
        print()
        print()
    if func == 7:
        DefSQL.sqlite_disconnect(sql_con)
        print("–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ!")
        time.sleep(3)
        break

    print("–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ -\t5\n"
          "–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–≤–µ–¥–∏—Ç–µ -\t6")
    try:
        exit_prog = int(input())
    except (TypeError, ValueError) as err:
        print("–í–≤–µ–¥–∏—Ç–µ:\n\t"
              "5 - –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã\n\t"
              "6 - –î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã ")
    else:
        if exit_prog == 6:
            DefSQL.sqlite_disconnect(sql_con)
            print("–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ!")
            time.sleep(3)
            break
        elif exit_prog == 5:
            continue
